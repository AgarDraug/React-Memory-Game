{"version":3,"sources":["components/Card.jsx","App.js","index.js"],"names":["Card","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","firstCard","setFirstCard","secondCard","setSecondCard","setDisabled","useEffect","shuffleCards","shuffledCards","sort","Math","random","map","item","id","prevCards","setTimeout","resetTurn","prevTurn","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAEe,SAASA,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAQ1D,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACIF,UAAU,QACVC,IAAI,kBACJE,QAbY,WACXJ,GACDF,EAAaD,IAYbM,IAAI,eCdhB,IAAME,EAAa,CACjB,CAAE,IAAO,qBAAsBC,SAAS,GACxC,CAAE,IAAO,qBAAuBA,SAAS,GACzC,CAAE,IAAO,mBAAoBA,SAAS,GACtC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,qBAAsBA,SAAS,GACxC,CAAE,IAAO,oBAAqBA,SAAS,IA+E1BC,MA5Ef,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAoCN,mBAAS,MAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGAC,qBAAU,WACRC,MACC,IAGH,IAAMA,EAAe,WACnB,IAAMC,EAAgB,UAAIf,EAAeA,GACtCgB,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAACC,EAAMC,GAAP,mBAAC,eAAkBD,GAAnB,IAAyBC,UAEhCZ,EAAa,MACbE,EAAc,MACdN,EAASU,GACTR,EAAS,IAILd,EAAe,SAACD,GACpBgB,EAAYG,EAAcnB,GAAQiB,EAAajB,IAKjDqB,qBAAU,WACJL,GAAaE,IACfE,GAAY,GACRJ,EAAUX,MAAQa,EAAWb,KAC/BQ,GAAS,SAAAiB,GACP,OAAOA,EAAUH,KAAI,SAAA3B,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAKL,GAAZ,IAAkBS,SAAS,IAEtBT,QAIb+B,YAAW,kBAAMC,MAAa,QAE/B,CAAChB,EAAWE,IAEf,IAAMc,EAAY,WAChBf,EAAa,MACbE,EAAc,MACdJ,GAAS,SAAAkB,GAAQ,OAAIA,EAAW,KAChCb,GAAY,IAGd,OACE,sBAAKhB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASe,EAAjB,sBAEA,qBAAKlB,UAAU,YAAf,SACGQ,EAAMe,KAAI,SAAA3B,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAclB,EAAKS,QAC3DN,SAAUA,GAJLH,EAAK6B,SAQhB,sBAAKzB,UAAU,QAAf,oBAA+BU,SC/ErCoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f7082b6b.chunk.js","sourcesContent":["import './Card.scss';\r\n\r\nexport default function Card({ card, handleChoice, flipped, disabled }) {\r\n\r\n    const handleClick = () => {\r\n        if (!disabled) {\r\n            handleChoice(card);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className={flipped ? \"flipped\" : \"\"}>\r\n        <img className=\"front\" src={card.src} alt=\"card front\" />\r\n        <img \r\n            className=\"cover\"\r\n            src=\"./img/cover.png\"\r\n            onClick={handleClick}\r\n            alt=\"cover\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\nimport './App.scss';\nimport Card from './components/Card';\n\nconst cardImages = [\n  { \"src\": \"./img/helmet-1.png\", matched: false },\n  { \"src\": \"./img/potion-1.png\" , matched: false},\n  { \"src\": \"./img/ring-1.png\", matched: false },\n  { \"src\": \"./img/scroll-1.png\", matched: false },\n  { \"src\": \"./img/shield-1.png\", matched: false },\n  { \"src\": \"./img/sword-1.png\", matched: false }\n];\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [firstCard, setFirstCard] = useState(null);\n  const [secondCard, setSecondCard] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // start the game automatically\n  useEffect(() => {\n    shuffleCards();\n  }, [])\n\n  // shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages, ...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map((item, id) => ({...item, id }));\n\n    setFirstCard(null);\n    setSecondCard(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  }\n\n  // handle choice\n  const handleChoice = (card) => {\n    firstCard ? setSecondCard(card) : setFirstCard(card);\n  }\n\n  // compare the cards\n\n  useEffect(() => {\n    if (firstCard && secondCard) {\n      setDisabled(true);\n      if (firstCard.src === secondCard.src) {\n        setCards(prevCards => {\n          return prevCards.map(card => {\n            if (card.src === firstCard.src) {\n              return { ...card, matched: true };\n            }\n            return card;\n          });\n        });\n      }\n      setTimeout(() => resetTurn(), 1000);\n    }\n  }, [firstCard, secondCard]);\n\n  const resetTurn = () => {\n    setFirstCard(null);\n    setSecondCard(null);\n    setTurns(prevTurn => prevTurn + 1);\n    setDisabled(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Memory Game</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => (\n          <Card\n            key={card.id}\n            card={card}\n            handleChoice={handleChoice}\n            flipped={card === firstCard || card === secondCard || card.matched}\n            disabled={disabled}\n          />\n        ))}\n      </div>\n      <div className=\"turns\">Turns: {turns}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}